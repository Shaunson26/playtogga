summary(aa.stack)
densityplot(~values | ind, data = aa.stack,
panel = function(...){ panel.densityplot(..., type = "l")},
scales = list(relation = "free"))
?panel.densityplot
densityplot(~values | ind, data = aa.stack,
panel = function(...){ panel.densityplot(..., type = "l", plot.points = NULL)},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(...){
panel.densityplot(..., type = "l", plot.points = "rug")},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(...){
panel.densityplot(..., type = "l", plot.points = F)},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(...){
panel.densityplot(..., type = "l", plot.points = F, adjust = 2)},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(...){
panel.densityplot(..., type = "l", plot.points = F, darg(list(adjust = 2)))},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(...){
panel.densityplot(..., type = "l", plot.points = F, darg = list(adjust = 2)))},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(...){
panel.densityplot(..., type = "l", plot.points = F, darg = list(adjust = 2))},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
darg = list(adjust = 2),
panel = function(...){
panel.densityplot(..., type = "l", plot.points = F)},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(...){
panel.densityplot(..., darg = list(), type = "l", plot.points = F)},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(..., darg = list(adjust = 2)){
panel.densityplot(..., type = "l", plot.points = F)},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(..., darg = list(adjust = 1)){
panel.densityplot(..., type = "l", plot.points = F)},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(..., type = "l", darg = list(adjust = 1)){
panel.densityplot(..., plot.points = F)},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(..., type = "p", darg = list(adjust = 1)){
panel.densityplot(..., plot.points = F)},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(..., darg = list(adjust = 1)){
panel.densityplot(..., plot.points = F, type = "p")},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(..., darg = list(adjust = 1)){
panel.densityplot(..., plot.points = F)},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(...,){
panel.densityplot(..., plot.points = F, darg = list(adjust = 1))},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(...){
panel.densityplot(..., plot.points = F, darg = list(adjust = 1))},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(...){
panel.densityplot(..., plot.points = F, adjust = 1)},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(...){
panel.densityplot(..., plot.points = F, adjust = .1)},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(...){
panel.densityplot(..., plot.points = F, adjust = 5)},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(){
panel.densityplot(plot.points = F, adjust = 5)},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(x){
panel.densityplot(x,plot.points = F, adjust = 5)},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(x){
panel.densityplot(x,plot.points = F, adjust = 5,darg = list())},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(x){
panel.densityplot(x,plot.points = F, adjust = 5,darg = list(adjust = 2))},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(x){
panel.densityplot(x,plot.points = F, adjust = 5,darg = list(adjust = 1.5))},
scales = list(relation = "free"))
densityplot(~values | ind, data = aa.stack,
panel = function(x){
panel.densityplot(x,plot.points = F, adjust = 5,darg = list(adjust = 1.5))},
scales = list(y = list(relation = "free")))
densityplot(~values | ind, data = aa.stack,
panel = function(x){
panel.densityplot(x,plot.points = F, adjust = 5,darg = list(adjust = 1.5))},
scales = list(y = list(relation = "free"), x = list(limits = c(-5,30))))
bb = aa[,1:10]
aa.stack = stack(bb)
aa.stack$QQ = row.names(aa)
densityplot(~values | ind, data = aa.stack,
panel = function(x){
panel.densityplot(x,plot.points = F, adjust = 5,darg = list(adjust = 1.5))},
scales = list(y = list(relation = "free"), x = list(limits = c(-5,30))))
densityplot(~values | ind, data = aa.stack,
layout = c(2,5),
scales = list(alternating = F,
y = list(relation = "free"),
x = list(limits = c(-5,30))),
panel = function(x){
panel.densityplot(x,plot.points = F, adjust = 5,darg = list(adjust = 1.5))
})
panel.densityplot(x,plot.points = F, adjust = 5,darg = list(adjust = 1.5))
densityplot(~values | ind, data = aa.stack,
layout = c(2,5),
scales = list(alternating = F,
y = list(relation = "free", rot = 90),
x = list(limits = c(-5,30))),
panel = function(x){
panel.densityplot(x,plot.points = F, adjust = 5,darg = list(adjust = 1.5))
})
densityplot(~values | ind, data = aa.stack,
layout = c(2,5),
scales = list(alternating = F,
y = list(relation = "free", rot = 180),
x = list(limits = c(-5,30))),
panel = function(x){
panel.densityplot(x,plot.points = F, adjust = 5,darg = list(adjust = 1.5))
})
densityplot(~values | ind, data = aa.stack,
layout = c(2,5),
scales = list(alternating = F,
y = list(relation = "free", rot = 0),
x = list(limits = c(-5,30))),
panel = function(x){
panel.densityplot(x,plot.points = F, adjust = 5,darg = list(adjust = 1.5))
})
densityplot(~values | ind, data = aa.stack,
layout = c(2,5), between = list(y = 0.5),
scales = list(alternating = F,
y = list(relation = "free", rot = 0),
x = list(limits = c(-5,30))),
panel = function(x){
panel.densityplot(x,plot.points = F, adjust = 5,darg = list(adjust = 1.5))
})
?panel.densityplot
qqScoresList = getPlayerQuantiles(pW2Glms, allPlayerWk1_2, quantiles = seq(1,99, length = 50))
playerScores = data.frame(t(calculateBytoggaScores(qqScoresList, eventScores)))
playerScores = playerScores[, 1:5]
playerScores.stack = stack(playerScores)
playerScores.stack$QQ = row.names(playerScores)
densityplot(~values | ind, data = playerScores.stack,
layout = c(5,2), between = list(y = 0.5),
xlab = "Predicted points", ylab = "Likelihood density",
scales = list(alternating = F,
y = list(relation = "free", rot = 0),
x = list(relation = "free", rot = 90)), #limits = c(-10,30))),
panel = function(x){
panel.densityplot(x, plot.points = F, adjust = 5,darg = list(adjust = 1.5), lwd = 2)
})
panel.abline(v = 0, col = 2, lwd lwd = 2)
panel.abline(v = 0, col = 2, lwd = 2)
densityplot(~values | ind, data = playerScores.stack,
layout = c(5,2), between = list(y = 0.5),
xlab = "Predicted points", ylab = "Likelihood density",
scales = list(alternating = F,
y = list(relation = "free", rot = 0),
x = list(relation = "free", rot = 90)), #limits = c(-10,30))),
panel = function(x){
panel.densityplot(x, plot.points = F, adjust = 5,darg = list(adjust = 1.5), lwd = 2)
panel.abline(v = 0, col = 2, lwd = 2)
})
playerScores = data.frame(t(calculateBytoggaScores(qqScoresList, eventScores)))
playerScores = playerScores[, 1:10]
playerScores.stack = stack(playerScores)
playerScores.stack$QQ = row.names(playerScores)
densityplot(~values | ind, data = playerScores.stack,
layout = c(5,2), between = list(y = 0.5),
xlab = "Predicted points", ylab = "Likelihood density",
scales = list(alternating = F,
y = list(relation = "free", rot = 0),
x = list(relation = "free", rot = 90)), #limits = c(-10,30))),
panel = function(x){
panel.densityplot(x, plot.points = F, adjust = 5,darg = list(adjust = 1.5), lwd = 2)
panel.abline(v = 0, col = 2, lwd = 1)
})
densityplot(~values | ind, data = playerScores.stack,
layout = c(5,2), between = list(y = 0.5),
xlab = "Predicted points", ylab = "Likelihood density",
scales = list(alternating = F,
y = list(relation = "free", rot = 0),
x = list(relation = "free", rot = 90)), #limits = c(-10,30))),
panel = function(x){
panel.densityplot(x, plot.points = F, adjust = 5,darg = list(adjust = 1.5), lwd = 2)
panel.abline(v = 0, col = "grey70", lwd = 1.5, lty = 2)
})
densityplot(~values | ind, data = playerScores.stack,
layout = c(5,2), between = list(y = 0.5),
xlab = "Predicted points", ylab = "Likelihood density",
scales = list(alternating = F,
y = list(relation = "free", rot = 0),
x = list(relation = "free", rot = 90)), #limits = c(-10,30))),
panel = function(x){
panel.densityplot(x, plot.points = F, adjust = 5,darg = list(adjust = 1.5), lwd = 2)
panel.abline(v = 0, col = "grey50", lwd = 1.5, lty = 2)
})
setwd("C:/Users/Shaunus/Desktop/Togga/playtogga/Functions/")
for (f in list.files(pattern="*.R")) {
source(f)
}
setwd("C:/Users/Shaunus/Desktop/Togga/playtogga/Functions/")
for (f in list.files(pattern="*.R")) {
source(f)
}
setwd("C:/Users/Shaunus/Desktop/Togga/playtogga/Data/")
eventScores = read.csv("eventScores.csv", row.names = 1)
setwd("C:/Users/Shaunus/Desktop/Togga/PlayerHTMLs")
myFiles = list.files()
wanted = c("E. Bailly", "R. Lukaku", "P. Pogba", "A. Hegazi", "H. Mkhitaryan", "J. Lössl", "S. Vokes".
"A. Nyom", "A. Mooy", "Zanka", "S. Mané", "R. Firmino", "M. Alonso", "W. Rooney", "B. Foster",
"C. Dawson", "C. Schindler", "Chicharito", "M. Salah" "S. Agüero")
wanted = c("E. Bailly", "R. Lukaku", "P. Pogba", "A. Hegazi", "H. Mkhitaryan", "J. Lössl", "S. Vokes".
"A. Nyom", "A. Mooy", "Zanka", "S. Mané", "R. Firmino", "M. Alonso", "W. Rooney", "B. Foster",
"C. Dawson", "C. Schindler", "Chicharito", "M. Salah", "S. Agüero")
wanted = c("E. Bailly", "R. Lukaku", "P. Pogba", "A. Hegazi", "H. Mkhitaryan", "J. Lössl", "S. Vokes",
"A. Nyom", "A. Mooy", "Zanka", "S. Mané", "R. Firmino", "M. Alonso", "W. Rooney", "B. Foster",
"C. Dawson", "C. Schindler", "Chicharito", "M. Salah", "S. Agüero")
grep(wanted, myFiles)
sapply(wanted, grep, myFiles)
as.numeric(sapply(wanted, grep, myFiles))
myFile2 = as.numeric(sapply(wanted, grep, myFiles))
myFile2 = myFile2[ !is.na(myFile2)]
allPlayerList = getIndividualPlayerTables(myFile2)
myFile2
myFile2 = myFiles[myFile2[ !is.na(myFile2)]]
allPlayerList = getIndividualPlayerTables(myFile2)
allPlayerWk2 = lapply(allPlayerList, function(x) x[1:2,])
pW2 = allPlayerWk2
pW2Glms = fitAllStatPoissonGLMs(pW2, varRange = 0:12)
pW2Glms = fitAllStatPoissonGLMs(pW2, varRange = 0:12)
plotAllPlayerDistributions(pW2Glms)
mostLikelyStatistics(pW2Glms)
qqScoresList = getPlayerQuantitles(pW2Glms, pW2, quantitles = c(10,50,90))
qqScoresList = getPlayerQuantiles(pW2Glms, pW2, quantiles = c(10,50,90))
do.call(rbind, calculateBytoggaScores(qqScoresList, eventScores))
qqScoresList
calculateBytoggaScores(qqScoresList, eventScores)
setwd("~/")
datIn = read.csv("test.csv")
str(datIn)
plot(datIn$Mine ~ datIn$Theirs)
plot(datIn$Mine ~ datIn$Theirs, pch = 19)
plot(datIn$Mine ~ datIn$Theirs, pch = 19, asp = 1)
plot(datIn$Mine ~ datIn$Theirs, pch = 19,
asp = 1, xlim = c(0,30))
asp = 1, xlim = c(0,30), ylim = c(0,30))
plot(datIn$Mine ~ datIn$Theirs, pch = 19,
asp = 1, xlim = c(0,30), ylim = c(0,30))
axLims = c(0,40)
axLims = c(0,40)
plot(datIn$Mine ~ datIn$Theirs, pch = 19,
asp = 1, xlim = axLims, ylim = axLims)
abline(0,1, col = "grey70", lty = 2)
plot(datIn$Mine ~ datIn$Theirs, pch = 19,
asp = 1, xlim = axLims, ylim = axLims,
xlab = "Fantasy Overlord predictions", ylab = "My predictions", font.lab = 2)
plot(datIn$Mine ~ datIn$Theirs, pch = 19,
#asp = 1, xlim = axLims, ylim = axLims,
xlab = "Fantasy Overlord predictions", ylab = "My predictions", font.lab = 2)
abline(0,1, col = "grey70", lty = 2)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player, 1)
plot(datIn$Mine ~ datIn$Theirs, pch = 19,
#asp = 1, xlim = axLims, ylim = axLims,
xlab = "Fantasy Overlord predictions", ylab = "My predictions", font.lab = 2)
abline(0,1, col = "grey70", lty = 2)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player, 1)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player, pos = 1)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player, pos = 2)
plot(datIn$Mine ~ datIn$Theirs, pch = 19,
#asp = 1, xlim = axLims, ylim = axLims,
xlab = "Fantasy Overlord predictions", ylab = "My predictions", font.lab = 2)
abline(0,1, col = "grey70", lty = 2)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player, pos = 2)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player, pos = 2, cex = 0.5)
plot(datIn$Mine ~ datIn$Theirs, pch = 19,
#asp = 1, xlim = axLims, ylim = axLims,
xlab = "Fantasy Overlord predictions", ylab = "My predictions", font.lab = 2)
abline(0,1, col = "grey70", lty = 2)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player, pos = 2, cex = 0.75)
datIn$Player
cbind(datIn$Player, 2)
cbind(as.character(datIn$Player), 2)
cbind(as.character(datIn$Player),
c(2,2,2,2,2,3,1,2,2,2,2,2,2))
cbind(as.character(datIn$Player),
c(2,2,2,2,2,3,1,2,2,2,2,2,2,2,2,2,2,2,2,2))
c(2,2,2,2,2,3,1,2,2,2,2,2,2,2,2,2,2,2,2,2)
length(c(2,2,2,2,2,3,1,2,2,2,2,2,2,2,2,2,2,2,2,2))
cbind(as.character(datIn$Player),
c(2,2,2,2,2,3,1,2,2,2,2,2,2,2,2,2,2,2,2))
posIn = c(2,2,2,2,2,3,1,2,2,2,4,2,2,2,2,2,2,3,2)
cbind(as.character(datIn$Player, posIn),
cbind(as.character(datIn$Player), posIn)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player, pos = posIn, cex = 0.75)
plot(datIn$Mine ~ datIn$Theirs, pch = 19,
#asp = 1, xlim = axLims, ylim = axLims,
xlab = "Fantasy Overlord predictions", ylab = "My predictions", font.lab = 2)
abline(0,1, col = "grey70", lty = 2)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player, pos = posIn, cex = 0.75)
posIn = c(2,2,2,2,2,
3,1,2,2,2,
4,3,2,2,2,
2,2,3,2)
plot(datIn$Mine ~ datIn$Theirs, pch = 19,
#asp = 1, xlim = axLims, ylim = axLims,
xlab = "Fantasy Overlord predictions", ylab = "My predictions", font.lab = 2)
abline(0,1, col = "grey70", lty = 2)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player, pos = posIn, cex = 0
)
plot(datIn$Mine ~ datIn$Theirs, pch = 19,
#asp = 1, xlim = axLims, ylim = axLims,
xlab = "Fantasy Overlord predictions", ylab = "My predictions", font.lab = 2)
abline(0,1, col = "grey70", lty = 2)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player, pos = posIn, cex = 0.75)
posIn = c(2,2,2,2,2,
3,1,2,2,1,
4,3,2,2,2,
2,1,3,2)
plot(datIn$Mine ~ datIn$Theirs, pch = 19,
#asp = 1, xlim = axLims, ylim = axLims,
xlab = "Fantasy Overlord predictions", ylab = "My predictions", font.lab = 2)
abline(0,1, col = "grey70", lty = 2)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player, pos = posIn, cex = 0.75)
cbind(as.character(datIn$Player), posIn)
posIn = c(2,2,2,2,2,
3,1,2,2,1,
4,3,2,2,2,
3,1,3,1)
plot(datIn$Mine ~ datIn$Theirs, pch = 19,
#asp = 1, xlim = axLims, ylim = axLims,
xlab = "Fantasy Overlord predictions", ylab = "My predictions", font.lab = 2)
abline(0,1, col = "grey70", lty = 2)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player, pos = posIn, cex = 0.75)
plot(datIn$Mine ~ datIn$Theirs, pch = 19,
xlim = c(5,18),
xlab = "Fantasy Overlord predictions", ylab = "My predictions", font.lab = 2)
abline(0,1, col = "grey70", lty = 2)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player, pos = posIn, cex = 0.75)
plot(datIn$Mine ~ datIn$Theirs, pch = 19,
xlim = c(5,18),
xlab = "Fantasy Overlord predictions", ylab = "My predictions", font.lab = 2)
abline(0,1, col = "grey70", lty = 2)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player, pos = posIn, cex = 0.75)
posIn = c(2,2,2,2,2,
3,1,2,2,1,
4,3,2,2,2,
3,1,3,2)
plot(datIn$Mine ~ datIn$Theirs, pch = 19,
xlim = c(6,16),
xlab = "Fantasy Overlord predictions", ylab = "My predictions", font.lab = 2)
abline(0,1, col = "grey70", lty = 2)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player, pos = posIn, cex = 0.75)
plot(datIn$Mine ~ datIn$Theirs, pch = 19,
xlim = c(7,16),
xlab = "Fantasy Overlord predictions", ylab = "My predictions", font.lab = 2)
abline(0,1, col = "grey70", lty = 2)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player, pos = posIn, cex = 0.75)
plot(datIn$Mine ~ datIn$Theirs, pch = 19,
xlim = c(7,15),
xlab = "Fantasy Overlord predictions", ylab = "My predictions", font.lab = 2)
abline(0,1, col = "grey70", lty = 2)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player, pos = posIn, cex = 0.75)
abline(0,1, col = "grey70", lty = 2, lwd = 2)
abline(lm(datIn$Mine ~ datIn$Theirs), col = 2, lwd = 2)
plot(datIn$Mine ~ datIn$Theirs, pch = 19,
xlim = c(7,15),
xlab = "Fantasy Overlord predictions", ylab = "My predictions", font.lab = 2)
abline(0,1, col = "grey70", lty = 2, lwd = 2)
abline(lm(datIn$Mine ~ datIn$Theirs), col = 2, lwd = 2)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player, pos = posIn, cex = 0.75)
plot(datIn$Mine ~ datIn$Theirs, type = "n", xlim = c(7,15),
xlab = "Fantasy Overlord predictions", ylab = "My predictions", font.lab = 2)
abline(0,1, col = "grey70", lty = 2, lwd = 2)
abline(lm(datIn$Mine ~ datIn$Theirs), col = 2, lwd = 2
)
points(datIn$Mine ~ datIn$Theirs, pch = 19)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player, pos = posIn, cex = 0.75)
plot(datIn$Mine ~ datIn$Theirs, type = "n", xlim = c(7,15),
xlab = "Fantasy Overlord predictions", ylab = "My predictions", font.lab = 2)
abline(0,1, col = "grey70", lty = 2, lwd = 2)
abline(lm(datIn$Mine ~ datIn$Theirs), col = 2, lwd = 2)
points(datIn$Mine ~ datIn$Theirs, pch = 19)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player, pos = posIn, cex = 0.6)
par(mar = c(4,4,1,1))
plot(datIn$Mine ~ datIn$Theirs, type = "n", xlim = c(7,15),
xlab = "Fantasy Overlord predictions", ylab = "My predictions", font.lab = 2)
abline(0,1, col = "grey70", lty = 2, lwd = 2)
abline(lm(datIn$Mine ~ datIn$Theirs), col = 2, lwd = 2)
points(datIn$Mine ~ datIn$Theirs, pch = 19)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player, pos = posIn, cex = 0.6)
plot(datIn$Mine ~ datIn$Theirs, type = "n", xlim = c(7,15),
asp = 1,
xlab = "Fantasy Overlord predictions", ylab = "My predictions", font.lab = 2)
abline(0,1, col = "grey70", lty = 2, lwd = 2)
abline(lm(datIn$Mine ~ datIn$Theirs), col = 2, lwd = 2)
points(datIn$Mine ~ datIn$Theirs, pch = 19)
par(mar = c(4,4,1,1))
plot(datIn$Mine ~ datIn$Theirs, type = "n",
#xlim = c(7,15),
asp = 1,
xlab = "Fantasy Overlord predictions", ylab = "My predictions", font.lab = 2)
abline(0,1, col = "grey70", lty = 2, lwd = 2)
abline(lm(datIn$Mine ~ datIn$Theirs), col = 2, lwd = 2)
par(mar = c(4,4,1,1))
plot(datIn$Mine ~ datIn$Theirs, type = "n",
#xlim = c(7,15),
xlim = axLims, ylim = axLims,
asp = 1,
xlab = "Fantasy Overlord predictions", ylab = "My predictions", font.lab = 2)
abline(0,1, col = "grey70", lty = 2, lwd = 2)
abline(lm(datIn$Mine ~ datIn$Theirs), col = 2, lwd = 2)
points(datIn$Mine ~ datIn$Theirs, pch = 19)
text(y = datIn$Mine, x = datIn$Theirs, labels = datIn$Player, pos = posIn, cex = 0.6)
par(mar = c(4,4,1,1))
plot(datIn$Mine ~ datIn$Theirs, type = "n",
#xlim = c(7,15),
xlim = axLims, ylim = axLims,
asp = 1,
xlab = "Fantasy Overlord predictions", ylab = "My predictions", font.lab = 2)
abline(0,1, col = "grey70", lty = 2, lwd = 2)
abline(lm(datIn$Mine ~ datIn$Theirs), col = 2, lwd = 2)
points(datIn$Mine ~ datIn$Theirs, pch = 19)
load("allPlayerTableList.RData")
# 1) Source all the functions
setwd("C:/Users/Shaunus/Desktop/Togga/playtogga/Functions/")
for (f in list.files(pattern="*.R")) {
source(f)
}
# 2) Get player names and event score information
setwd("C:/Users/Shaunus/Desktop/Togga/playtogga/Data/")
load("eventScores.RData")
load("playerNamesURLs_Aug2017.RData")
# 3) Get player data table in a list
setwd("C:/Users/Shaunus/Desktop/Togga/")
load("allPlayerTableList.RData")
allPlayerTable.list <- addPlayerInfoToPlayerTable(allPlayerTable.list, playerURLTeamPosition)
allPlayerTable.list <- addPlayerInfoToPlayerTable(allPlayerTable.list, playerURLTeamPosition)
allPlayerTable.list[1:2]
allPlayerTable.list$`A. Ayew`
allPlayerTable.list$`A. Ayew`[1:5,]
allPlayerTableWks.list = lapply(allPlayerTable.list, function(aptl) aplt[1:2,])
allPlayerTableWks.list = lapply(allPlayerTable.list, x[1:2,])
allPlayerTableWks.list = lapply(allPlayerTable.list,  function(x) x[1:2,])
allPlayerTableWks.list[1:5]
allPlayerTableWks.list = lapply(allPlayerTable.list,  function(x) x[1:3,])
allPlayerTableWks.list[1:5]
source("Functions/fitPoissonGLM.R")
setwd("C:/Users/Shaunus/Desktop/Togga/playtogga")
source("Functions/fitPoissonGLM.R")
playerGlms.list = fitAllStatPoissonGLMs(allPlayerTableWks.list, varRange = 0:12)
attributes(pW2Glms$`A. Ayew`)
attributes(playerGlms.list$`A. Ayew`)
playerGlms.list$`A. Ayew`$G
source("Functions/plotDistributions.R")
plotOnePlayerDistributions(pW2Glms$`A. Ayew`, main = "A. Ayew")
plotOnePlayerDistributions(playerGlms.list$`A. Ayew`, main = "A. Ayew")
plotAllPlayerDistributions(playerGlms.list[1:2])
plotAllPlayerDistributions(playerGlms.list[1:2])
plotAllPlayerDistributions <- function(allPlayerGLMs){
playerNames = names(allPlayerGLMs)
for(i in 1:length(playerNames)){
plotOnePlayerDistributions(allPlayerGLMs[[i]], main = playerNames[i])
}
}
plotOnePlayerDistributions <- function(myFit, main = NULL, ...){
require(lattice)
datIn = t(do.call(rbind, lapply(myFit, function(x) x$outPcnt)))
colnames(datIn) = c("G","A","CC","SCR","SOT","STO","AER","CLR","CS","INT","PS","SV","TW","DIS","GC","OG","YC","RC")
datInStack = stack(as.data.frame(datIn))
datInStack$hits = as.numeric(row.names(datIn))
print(
barchart(values ~ hits | ind, data = datInStack,
main = main, xlab = "Hits", ylab = "% likelihood",
layout = c(6,3), between = list(x = 0.5, y = 0.5),
scales = list(alternating = F, scale = "free", x = list(rot = 90, labels = 0:40, at = 1:41)),
horizontal = F)
)
}
plotAllPlayerDistributions(playerGlms.list[1:2])
source("Functions/predictScores.R")
mostLikelyStatistics(playerGlms.list)[1:10,]
source("Functions/getPlayerQuantiles.R")
qqScoresList = getPlayerQuantiles(pW2Glms, playerGlms.list, quantiles = c(10,50,90))
qqScoresList = getPlayerQuantiles(playerGlms.list, allPlayerTableWks.list, quantiles = c(10,50,90))
qqScoresList = getPlayerQuantiles(playerGlms.list, allPlayerTable.list, quantiles = c(10,50,90))
